module balloondb.queryparse.QueryParser where

import Data.MicroParsec
import Data.Iterators(StringIterator SI)

queryParser = do
  queries <- many query
  return queries

query = selectQuery
    <|> deleteQuery

selectQuery = do
  (string "SELECT")
  spaces
  dataObjType <- (many letter)
  eoe
  return ("SELECT", dataObjType)

deleteQuery = do
  (string "DELETE")
  spaces
  dataObjType <- (many letter)
  eoe
  return ("DELETE", dataObjType)

-- end of expression is a semi-colon
eoe = charParse ';'

eol = charParse '\n'

charParse c = satisfy(\x -> x == c)

parseQuery q = parse queryParser (SI.from q)
